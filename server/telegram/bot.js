import TelegramBot from "node-telegram-bot-api";
import dotenv from "dotenv";
import { TelegramUser } from "../db/models/telegramUsers.js";

dotenv.config();

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

const adminId = 718830020; // My Telegram ID

const channelLink = "https://t.me/kodzhinky";
const supportLink = "https://t.me/women_psyconference";
const instagramLink = "https://www.instagram.com/kod.zhinky?igsh=MXQ5djN3cXBhenQ0bQ==";
const siteLink = "https://warsawkod.women.place/?utm_source=Telegram_bot&utm_medium=referral&utm_campaign=telegram_bot";

// üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω—É –≤ –ª–∏—á–∫—É
export async function sendFormToAdmin({ fullName, phone, telegram, utmParams = {} }) {
  const { utm_source, utm_medium, utm_campaign } = utmParams;

  const message = `
üìù <b>–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –∑ —Ñ–æ—Ä–º–∏</b>

üë§ –Ü–º‚Äô—è: ${fullName}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üí¨ Telegram: ${telegram || "–Ω–µ –≤–∫–∞–∑–∞–Ω–æ"}

üìä <b>UTM-–º—ñ—Ç–∫–∏</b>
üîπ utm_source: ${utm_source || "‚Äî"}
üîπ utm_medium: ${utm_medium || "‚Äî"}
üîπ utm_campaign: ${utm_campaign || "‚Äî"}
`;

  try {
    await bot.sendMessage(adminId, message, { parse_mode: "HTML" });
  } catch (error) {
    console.error("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É:", error.message);
  }
}

// üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start(?: (.+))?/, async (msg, match) => {
  const chatID = msg.chat.id;
  const source = match?.[1] || "unknown";

  const userData = {
    telegramID: msg.from.id.toString(),
    username: msg.from.username,
    firstName: msg.from.first_name,
    lastName: msg.from.last_name,
    languageCode: msg.from.language_code,
    isPremium: msg.from.is_premium || false,
    source,
  };

  try {
    const updatedUser = await TelegramUser.findOneAndUpdate(
      { telegramID: userData.telegramID },
      {
        $setOnInsert: userData,
        $push: { transitions: { date: new Date(), source } }
      },
      { upsert: true, new: true }
    );

    await bot.sendMessage(chatID,
      `–í—ñ—Ç–∞—î–º–æ, <b>${userData.firstName}</b>!‚ú®

–ú–∏ —Ä–∞–¥—ñ, —â–æ —Ç–∏ —Ç—É—Çüíõ
–¶–µ –≤–∂–µ –±—ñ–ª—å—à–µ, –Ω—ñ–∂ –ø—Ä–æ—Å—Ç–æ –∫—Ä–æ–∫ ‚Äî —Ü–µ —à–ª—è—Ö –¥–æ —Å–µ–±–µ.

–©–æ–± —Ç–∏ –Ω—ñ—á–æ–≥–æ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∞(–≤):
–í—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è, –±–µ–∫—Å—Ç–µ–π–¥–∂, —Ä–æ–∑–∫–ª–∞–¥ —ñ –Ω–æ–≤–∏–Ω–∏ ‚Äî —É –Ω–∞—à–æ–º—É Telegram-–∫–∞–Ω–∞–ª—ñ.

–Ø–∫—â–æ —â–æ—Å—å –Ω–µ –ø—Ä–∞—Ü—é—î —á–∏ –º–∞—î—à –ø–∏—Ç–∞–Ω–Ω—è ‚Äî –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—ñ–¥—Ç—Ä–∏–º–∫–∞¬ª.

–û–±—ñ–π–º–∞—î–º–æ —Ç–µ–±–µ —â–µ –¥–æ –∑—É—Å—Ç—Ä—ñ—á—ñ üíõ
<b>–ö–æ–º–∞–Ω–¥–∞ ¬´–ö–æ–¥ –ñ—ñ–Ω–∫–∏¬ª</b>`, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        reply_markup: {
          inline_keyboard: [
            [
              { text: "üì¢ –ö–∞–Ω–∞–ª", url: channelLink },
              { text: "üí¨ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞", url: supportLink }
            ],
            [
              { text: "Instagram", url: instagramLink },
              { text: "–ù–∞—à —Å–∞–π—Ç", url: siteLink }
            ]
          ]
        }
      });

  } catch (err) {
    console.error("Error in /start handler:", err);
  }
});

export default bot;